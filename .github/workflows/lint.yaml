name: Lint

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  check-cpp:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download cpplint
      shell: pwsh
      run: |
        Invoke-WebRequest https://raw.githubusercontent.com/mockingbirdnest/styleguide/casanova-2023-04-25/cpplint/cpplint.py -OutFile cpplint.py
    - name: Run cpplint
      shell: pwsh
      run: |
        $filters = @(
            "-legal/copyright",
            "-build/c++11",
            "-runtime/references",
            "-runtime/arrays",
            "-build/include_order",
            "-readability/braces",
            "-build/namespaces")
        $errors = @()
        $ErrorActionPreference = "Continue"
        foreach ($file in $(ls "*\*.[ch]pp")) {
          $output = $(
            python .\cpplint.py                           `
                --extensions=hpp,cpp                      `
                --output=vs7                              `
                --filter=$([string]::join(",", $filters)) `
                $file 2>&1 `
          ).Exception.Message
          if ($LastExitCode -ne 0) {
            # Drop the the line that says “Done processing” and the one that
            # gives the total number of errors.
            $errors += $output[0..($output.Length-3)]
            $output | write-error
          } else {
            echo $output
          }
        }
        foreach ($e in $errors) {
          ($file_line, $message) = $e.Split(@('):'), [StringSplitOptions]::None)
          ($file, $line) = $file_line.Split('(')
          $file = $file.Split('Principia\')[-1] -replace '\','/'
          $title =  $message.Split('[')[-2]
          $title = $title.Substring(0, $title.Length - 2)
          # See https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/workflow-commands-for-github-actions#setting-a-warning-message.
          #REMOVE BEFORE FLIGHT
          echo $file
          echo $line
          echo $title
          # REMOVE BEFORE FLIGHT
          echo "::warning file=$file,line=$line,title=$title::$message"
        }
        exit $errors.Length
