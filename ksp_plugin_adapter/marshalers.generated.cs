// Warning!  This file was generated by running a program (see project |tools|).
// If you change it, the changes will be lost the next time the generator is
// run.  You should change the generator instead.

using System;
using System.Runtime.InteropServices;

namespace principia {
namespace ksp_plugin_adapter {

internal class ConfigurationAccuracyParametersMarshaler : MonoMarshaler {
  [StructLayout(LayoutKind.Sequential)]
  internal struct Representation {
    public IntPtr fitting_tolerance;
    public IntPtr geopotential_tolerance;
  }

  public static ICustomMarshaler GetInstance(string s) {
    return instance_;
  }

  public override void CleanUpNativeDataImplementation(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.fitting_tolerance);
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.geopotential_tolerance);
    Marshal.FreeHGlobal(native_data);
  }

  public override IntPtr MarshalManagedToNativeImplementation(object managed_object) {
    if (!(managed_object is ConfigurationAccuracyParameters value)) {
      throw new NotSupportedException();
    }
    var representation = new Representation{
        fitting_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.fitting_tolerance),
        geopotential_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.geopotential_tolerance),
    };
    IntPtr buffer = Marshal.AllocHGlobal(Marshal.SizeOf(representation));
    Marshal.StructureToPtr(representation, buffer, fDeleteOld: false);
    return buffer;
  }

  public override object MarshalNativeToManaged(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    return new ConfigurationAccuracyParameters{
        fitting_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.fitting_tolerance) as String,
        geopotential_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.geopotential_tolerance) as String,
    };
  }

  private static readonly ConfigurationAccuracyParametersMarshaler instance_ =
      new ConfigurationAccuracyParametersMarshaler();
}

internal class ConfigurationFixedStepParametersMarshaler : MonoMarshaler {
  [StructLayout(LayoutKind.Sequential)]
  internal struct Representation {
    public IntPtr fixed_step_size_integrator;
    public IntPtr integration_step_size;
  }

  public static ICustomMarshaler GetInstance(string s) {
    return instance_;
  }

  public override void CleanUpNativeDataImplementation(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.fixed_step_size_integrator);
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.integration_step_size);
    Marshal.FreeHGlobal(native_data);
  }

  public override IntPtr MarshalManagedToNativeImplementation(object managed_object) {
    if (!(managed_object is ConfigurationFixedStepParameters value)) {
      throw new NotSupportedException();
    }
    var representation = new Representation{
        fixed_step_size_integrator = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.fixed_step_size_integrator),
        integration_step_size = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.integration_step_size),
    };
    IntPtr buffer = Marshal.AllocHGlobal(Marshal.SizeOf(representation));
    Marshal.StructureToPtr(representation, buffer, fDeleteOld: false);
    return buffer;
  }

  public override object MarshalNativeToManaged(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    return new ConfigurationFixedStepParameters{
        fixed_step_size_integrator = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.fixed_step_size_integrator) as String,
        integration_step_size = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.integration_step_size) as String,
    };
  }

  private static readonly ConfigurationFixedStepParametersMarshaler instance_ =
      new ConfigurationFixedStepParametersMarshaler();
}

internal class ConfigurationAdaptiveStepParametersMarshaler : MonoMarshaler {
  [StructLayout(LayoutKind.Sequential)]
  internal struct Representation {
    public IntPtr adaptive_step_size_integrator;
    public IntPtr length_integration_tolerance;
    public IntPtr speed_integration_tolerance;
  }

  public static ICustomMarshaler GetInstance(string s) {
    return instance_;
  }

  public override void CleanUpNativeDataImplementation(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.adaptive_step_size_integrator);
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.length_integration_tolerance);
    NoOwnershipTransferUTF8Marshaler.GetInstance(null).CleanUpNativeData(representation.speed_integration_tolerance);
    Marshal.FreeHGlobal(native_data);
  }

  public override IntPtr MarshalManagedToNativeImplementation(object managed_object) {
    if (!(managed_object is ConfigurationAdaptiveStepParameters value)) {
      throw new NotSupportedException();
    }
    var representation = new Representation{
        adaptive_step_size_integrator = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.adaptive_step_size_integrator),
        length_integration_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.length_integration_tolerance),
        speed_integration_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalManagedToNative(value.speed_integration_tolerance),
    };
    IntPtr buffer = Marshal.AllocHGlobal(Marshal.SizeOf(representation));
    Marshal.StructureToPtr(representation, buffer, fDeleteOld: false);
    return buffer;
  }

  public override object MarshalNativeToManaged(IntPtr native_data) {
    var representation = (Representation)Marshal.PtrToStructure(native_data, typeof(Representation));
    return new ConfigurationAdaptiveStepParameters{
        adaptive_step_size_integrator = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.adaptive_step_size_integrator) as String,
        length_integration_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.length_integration_tolerance) as String,
        speed_integration_tolerance = NoOwnershipTransferUTF8Marshaler.GetInstance(null).MarshalNativeToManaged(representation.speed_integration_tolerance) as String,
    };
  }

  private static readonly ConfigurationAdaptiveStepParametersMarshaler instance_ =
      new ConfigurationAdaptiveStepParametersMarshaler();
}

}  // namespace ksp_plugin_adapter
}  // namespace principia
